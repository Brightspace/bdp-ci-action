name: Run NPM Directive for Stage
on:
  workflow_call:
    inputs:
      account:
        description: 'AWS account number'
        required: true
      components:
        description: 'List of components to action on'
        required: true
      config:
        description: 'Config JSON file'
        required: true
      directive:
        description: 'Directive to run. e.g. test, deploy'
        required: true
      hash:
        description: 'Github commit hash to checkout'
        required: false
        default: ''
      region:
        description: 'AWS region'
        required: true
      stage:
        description: 'Name of stage'
        required: true
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_SESSION_TOKEN:
        required: true
      CODEARTIFACT_AUTH_TOKEN:
        required: true

jobs:
  env-setup:
    runs-on: [ self-hosted, AWS, Linux ]
    steps:
      - name: Checkout branch
        uses: Brightspace/third-party-actions@actions/checkout
        with:
          ref: ${{ inputs.hash }}
          fetch-depth: 0

      - name: Use Node.js
        uses: Brightspace/third-party-actions@actions/setup-node
        with:
          node-version-file: .nvmrc

      - name: Add CodeArtifact npm registry
        uses: Brightspace/codeartifact-actions/npm/add-registry@main
        with:
          auth-token: ${{ secrets.CODEARTIFACT_AUTH_TOKEN }}

      - name: Set up AWS creds
        uses: Brightspace/third-party-actions@aws-actions/configure-aws-credentials
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ inputs.region }}
          role-to-assume: "role=arn:aws:iam::${{ inputs.account }}:role/github-actions-ci-assumable-role"
          role-duration-seconds: 1200

  run-directive:
    runs-on: [ self-hosted, AWS, Linux ]
    needs: env-setup
    strategy:
      fail-fast: false
      matrix:
        COMPONENT: ${{ fromJson(inputs.components) }}
    steps:
      - name: Run Directive (${{ matrix.COMPONENT }})
        working-directory: ${{ matrix.COMPONENT }}
        env:
          CONFIG_PATH: ${{ inputs.config }}
          DIRECTIVE: ${{ inputs.directive }}
          STAGE: ${{ inputs.stage }}
        run: |
          npm ci
          npm run ${ DIRECTIVE } -- --stage ${ STAGE }
